#pragma checksum "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "95f30af396afdc4aa4999e85f2029bb021ce1fcd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\peter\source\repos\LeftRover\Views\_ViewImports.cshtml"
using LeftRover;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\peter\source\repos\LeftRover\Views\_ViewImports.cshtml"
using LeftRover.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"95f30af396afdc4aa4999e85f2029bb021ce1fcd", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c705c6ebda201c70e33a0f4233b18ba3768e5ba0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LeftRover.ViewModels.HomeViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"" style=""padding-top: 20px;"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                Avalilable donations near me:
            </div>
            <div class=""card-body"">
                <h5 class=""card-title"">Map View</h5>
                <div id=""map"" style=""width: 100%; height: 500px""></div>
            </div>
        </div>
    </div>
</div>

<div class=""row"" style=""padding-top: 10px; padding-bottom: 10px;"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                Top 5 Donors:
            </div>
            <div class=""card-body"">
                <ul class=""list-group"">
");
#nullable restore
#line 28 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                     foreach (string donor in Model.Top5Donors)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <li class=\"list-group-item\">");
#nullable restore
#line 30 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                                               Write(donor);

#line default
#line hidden
#nullable disable
            WriteLiteral("</li>\r\n");
#nullable restore
#line 31 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                </ul>
            </div>
        </div>
    </div>
</div>

<div class=""row"" style=""padding-bottom: 10px;"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                All Avalilable donations:
            </div>
            <div class=""card-body"">
                <table class=""table"">
                    <thead>
                        <tr>
                            <th scope=""col"">Description</th>
                            <th scope=""col"">Status</th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 53 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                         foreach (DonationsModel donation in Model.Donations)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\r\n                            <td><a");
            BeginWriteAttribute("href", " href=\"", 1793, "\"", 1842, 2);
            WriteAttributeValue("", 1800, "/Home/ViewDonation?id=", 1800, 22, true);
#nullable restore
#line 56 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
WriteAttributeValue("", 1822, donation.DonationID, 1822, 20, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 56 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                                                                                Write(donation.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a></td>\r\n                            <td>");
#nullable restore
#line 57 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                           Write(donation.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        </tr>\r\n");
#nullable restore
#line 59 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyAw7YL8Cj-VpRbf_eVhMf9xV6mnKrg0VBM&callback=initMap&libraries=&v=weekly"" async></script>
<script>
    let map;

    function initMap() {

        const geocoder = new google.maps.Geocoder();

        map = new google.maps.Map(document.getElementById(""map""), {
            center: { lat: 34.1621, lng: -119.0435 },
            zoom: 10,
        });

");
#nullable restore
#line 80 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
           string mark_home = ""; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 82 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
         if(User.Identity.Name != null && User.Identity.IsAuthenticated)
        {
            mark_home = "geocodeHomeAddress(geocoder, map, \"" + Model.HomeAddress + "\");";
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 85 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
       Write(Html.Raw(mark_home));

#line default
#line hidden
#nullable disable
#nullable restore
#line 85 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                                ;
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 88 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
         foreach (DonationsModel dnt in Model.Donations)
        {
            string geocode = "geocodeAddress(geocoder, map, \"" + dnt.GetAddress() + "\", \"/Home/ViewDonation?id=" + dnt.DonationID + "\");";
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 91 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
       Write(Html.Raw(geocode));

#line default
#line hidden
#nullable disable
#nullable restore
#line 91 "C:\Users\peter\source\repos\LeftRover\Views\Home\Index.cshtml"
                              ;
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    }

    function geocodeHomeAddress(geocoder, resultsMap, addressGiven) {
        const address = addressGiven;
        geocoder.geocode({ address: address }, (results, status) => {
            if (status === ""OK"") {
                resultsMap.setCenter(results[0].geometry.location);
                new google.maps.Marker({
                    map: resultsMap,
                    label: ""Your Location"",
                    position: results[0].geometry.location,
                });
            }
            else {
                alert(""Geocode was not successful for the following reason: "" + status);
            }
        });
    }

    function geocodeAddress(geocoder, resultsMap, addressGiven, urlGiven) {
        const address = addressGiven;
        const url = urlGiven;
        geocoder.geocode({ address: address }, (results, status) => {
            if (status === ""OK"") {
                var marker = new google.maps.Marker({
                    map: resultsMap,
             ");
            WriteLiteral(@"       label: ""Donation"",
                    url: url,
                    position: results[0].geometry.location,
                });

                google.maps.event.addListener(marker, 'click', function () {
                    window.location.href = this.url;
                });
            }
            else {
                alert(""Geocode was not successful for the following reason: "" + status);
            }
        });
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LeftRover.ViewModels.HomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
